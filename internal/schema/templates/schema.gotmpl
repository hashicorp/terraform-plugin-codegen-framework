// Code generated by terraform-plugin-framework-generator DO NOT EDIT.

package {{.PackageName}}

import (
{{.Imports}}
{{- if eq .GeneratorType "DataSource"}}
"github.com/hashicorp/terraform-plugin-framework/datasource/schema"
{{- else if eq .GeneratorType "Provider"}}
"github.com/hashicorp/terraform-plugin-framework/provider/schema"
{{- else if eq .GeneratorType "Resource"}}
"github.com/hashicorp/terraform-plugin-framework/resource/schema"
{{- end}}
	"os/exec"
	"time"

	"github.com/hashicorp/terraform-plugin-framework-validators/stringvalidator"
	"github.com/hashicorp/terraform-plugin-framework/path"
	"github.com/hashicorp/terraform-plugin-framework/schema/validator"
	"github.com/hashicorp/terraform-plugin-sdk/v2/helper/retry"

	"github.com/NaverCloudPlatform/terraform-plugin-codegen-framework/internal/common"
	"github.com/NaverCloudPlatform/terraform-plugin-codegen-framework/internal/conn"
	"github.com/NaverCloudPlatform/terraform-plugin-codegen-framework/internal/util"
	"github.com/hashicorp/terraform-plugin-log/tflog"

	"github.com/hashicorp/terraform-plugin-framework/resource"
)

func {{.Name}}{{.GeneratorType}}Schema(ctx context.Context) schema.Schema {
return schema.Schema{
    {{- if .Attributes}}
    Attributes: map[string]schema.Attribute{
		"id": schema.StringAttribute{
			Optional: true,
			Computed: true,
		},
        {{- .Attributes}}
	},
    {{- end}}
    {{- if .Blocks }}
	Blocks: map[string]schema.Block{
        {{- .Blocks}}
	},
    {{- end}}
    {{- if .Description }}
	Description: {{printf "%q" .Description}},
    {{- end}}
    {{- if .MarkdownDescription }}
	MarkdownDescription: {{printf "%q" .MarkdownDescription}},
    {{- end}}
    {{- if .DeprecationMessage }}
	DeprecationMessage: {{printf "%q" .DeprecationMessage}},
    {{- end}}
    }
}
