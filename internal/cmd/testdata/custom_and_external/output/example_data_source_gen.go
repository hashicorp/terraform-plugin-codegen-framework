// Code generated by terraform-plugin-framework-generator DO NOT EDIT.

package provider

import (
	"github.com/.../myvalidator"
	"github.com/hashicorp/terraform-plugin-framework/attr"
	"github.com/hashicorp/terraform-plugin-framework/datasource/schema"
	"github.com/hashicorp/terraform-plugin-framework/schema/validator"
	"github.com/hashicorp/terraform-plugin-framework/types"
	"github.com/my_account/my_project/boolattribute"
	"github.com/my_account/my_project/string"
)

var exampleDataSourceSchema = schema.Schema{
	Attributes: map[string]schema.Attribute{
		"bool_attribute": schema.BoolAttribute{
			CustomType: my_boolattribute_type,
			Optional:   true,
			Sensitive:  true,
			Validators: []validator.Bool{
				myvalidator.Validate(),
			},
		},
		"list_attribute": schema.ListAttribute{
			ElementType: types.ListType{
				ElemType: my_string_type,
			},
			Computed: true,
		},
		"list_nested_attribute": schema.ListNestedAttribute{
			NestedObject: schema.NestedAttributeObject{
				Attributes: map[string]schema.Attribute{
					"nested_bool_attribute": schema.BoolAttribute{
						Optional: true,
					},
					"nested_list_attribute": schema.ListAttribute{
						ElementType: types.StringType,
						Computed:    true,
					},
				},
			},
			Optional: true,
		},
		"object_attribute": schema.ObjectAttribute{
			AttributeTypes: map[string]attr.Type{
				"obj_bool": types.BoolType,
				"obj_list": types.ListType{
					ElemType: types.StringType,
				},
			},
			Required: true,
		},
		"single_nested_attribute": schema.SingleNestedAttribute{
			Attributes: map[string]schema.Attribute{
				"nested_bool_attribute": schema.BoolAttribute{
					Optional: true,
				},
				"nested_list_attribute": schema.ListAttribute{
					ElementType: types.StringType,
					Computed:    true,
				},
			},
			Optional: true,
		},
	},
	Blocks: map[string]schema.Block{
		"list_nested_block": schema.ListNestedBlock{
			NestedObject: schema.NestedBlockObject{
				Attributes: map[string]schema.Attribute{
					"nested_bool_attribute": schema.BoolAttribute{
						Optional: true,
					},
					"nested_list_attribute": schema.ListAttribute{
						ElementType: types.StringType,
						Computed:    true,
					},
				},
			},
		},
		"single_nested_block": schema.SingleNestedBlock{
			Attributes: map[string]schema.Attribute{
				"nested_bool_attribute": schema.BoolAttribute{
					Optional: true,
				},
				"nested_list_attribute": schema.ListAttribute{
					ElementType: types.StringType,
					Computed:    true,
				},
			},
		},
	},
}
