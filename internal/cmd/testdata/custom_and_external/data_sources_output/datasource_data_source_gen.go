// Code generated by terraform-plugin-framework-generator DO NOT EDIT.

package generated

import (
	"github.com/hashicorp/terraform-plugin-framework/attr"
	"github.com/hashicorp/terraform-plugin-framework/datasource/schema"
	"github.com/hashicorp/terraform-plugin-framework/types"
)

var datasourceDataSourceSchema = schema.Schema{
	Attributes: map[string]schema.Attribute{
		"bool_attribute": schema.BoolAttribute{
			Computed: true,
		},
		"list_list_attribute": schema.ListAttribute{
			ElementType: types.ListType{
				ElemType: types.StringType,
			},
			Computed: true,
		},
		"list_map_attribute": schema.ListAttribute{
			ElementType: types.MapType{
				ElemType: types.StringType,
			},
			Computed: true,
		},
		"list_nested_one": schema.ListNestedAttribute{
			NestedObject: schema.NestedAttributeObject{
				Attributes: map[string]schema.Attribute{
					"bool_attribute": schema.BoolAttribute{
						Computed: true,
					},
				},
			},
			Computed: true,
		},
		"list_nested_three": schema.ListNestedAttribute{
			NestedObject: schema.NestedAttributeObject{
				Attributes: map[string]schema.Attribute{
					"list_nested_three_list_nested_one": schema.ListNestedAttribute{
						NestedObject: schema.NestedAttributeObject{
							Attributes: map[string]schema.Attribute{
								"list_attribute": schema.ListAttribute{
									ElementType: types.StringType,
									Computed:    true,
								},
							},
						},
						Computed: true,
					},
				},
			},
			Computed: true,
		},
		"list_nested_two": schema.ListNestedAttribute{
			NestedObject: schema.NestedAttributeObject{
				Attributes: map[string]schema.Attribute{
					"list_nested_two_list_nested_one": schema.ListNestedAttribute{
						NestedObject: schema.NestedAttributeObject{
							Attributes: map[string]schema.Attribute{
								"bool_attribute": schema.BoolAttribute{
									Computed: true,
								},
							},
						},
						Computed: true,
					},
				},
			},
			Computed: true,
		},
		"list_object_attribute": schema.ListAttribute{
			ElementType: types.ObjectType{
				AttrTypes: map[string]attr.Type{
					"obj_string_attr": types.StringType,
				},
			},
			Computed: true,
		},
		"list_object_object_attribute": schema.ListAttribute{
			ElementType: types.ObjectType{
				AttrTypes: map[string]attr.Type{
					"obj_obj_attr": types.ObjectType{
						AttrTypes: map[string]attr.Type{
							"obj_obj_string_attr": types.StringType,
						},
					},
				},
			},
			Computed: true,
		},
		"object_attribute": schema.ObjectAttribute{
			AttributeTypes: map[string]attr.Type{
				"obj_string_attr": types.StringType,
			},
			Computed: true,
		},
		"object_list_attribute": schema.ObjectAttribute{
			AttributeTypes: map[string]attr.Type{
				"obj_list_attr": types.ListType{
					ElemType: types.StringType,
				},
			},
			Computed: true,
		},
		"object_list_object_attribute": schema.ObjectAttribute{
			AttributeTypes: map[string]attr.Type{
				"obj_list_attr": types.ListType{
					ElemType: types.ObjectType{
						AttrTypes: map[string]attr.Type{
							"obj_list_obj_attr": types.StringType,
						},
					},
				},
			},
			Computed: true,
		},
		"single_nested_bool_attribute": schema.SingleNestedAttribute{
			Attributes: map[string]schema.Attribute{
				"bool_attribute": schema.BoolAttribute{
					Computed: true,
				},
			},
			Computed: true,
		},
		"single_nested_single_nested_bool_attribute": schema.SingleNestedAttribute{
			Attributes: map[string]schema.Attribute{
				"single_nested_attribute": schema.SingleNestedAttribute{
					Attributes: map[string]schema.Attribute{
						"bool_attribute": schema.BoolAttribute{
							Computed: true,
						},
					},
					Computed: true,
				},
			},
			Computed: true,
		},
		"single_nested_single_nested_list_attribute": schema.SingleNestedAttribute{
			Attributes: map[string]schema.Attribute{
				"single_nested_attribute": schema.SingleNestedAttribute{
					Attributes: map[string]schema.Attribute{
						"list_attribute": schema.ListAttribute{
							ElementType: types.StringType,
							Computed:    true,
						},
					},
					Computed: true,
				},
			},
			Computed: true,
		},
	},
	Blocks: map[string]schema.Block{
		"list_nested_block_bool_attribute": schema.ListNestedBlock{
			NestedObject: schema.NestedBlockObject{
				Attributes: map[string]schema.Attribute{
					"bool_attribute": schema.BoolAttribute{
						Computed: true,
					},
				},
			},
		},
		"list_nested_block_object_attribute_list_nested_nested_block_list_attribute": schema.ListNestedBlock{
			NestedObject: schema.NestedBlockObject{
				Attributes: map[string]schema.Attribute{
					"object_attribute": schema.ObjectAttribute{
						AttributeTypes: map[string]attr.Type{
							"obj_string_attr": types.StringType,
						},
						Computed: true,
					},
				},
				Blocks: map[string]schema.Block{
					"list_nested_block": schema.ListNestedBlock{
						NestedObject: schema.NestedBlockObject{
							Attributes: map[string]schema.Attribute{
								"list_attribute": schema.ListAttribute{
									ElementType: types.StringType,
									Computed:    true,
								},
							},
						},
					},
				},
			},
		},
		"list_nested_list_nested_block_bool_attribute": schema.ListNestedBlock{
			NestedObject: schema.NestedBlockObject{
				Blocks: map[string]schema.Block{
					"list_nested_block": schema.ListNestedBlock{
						NestedObject: schema.NestedBlockObject{
							Attributes: map[string]schema.Attribute{
								"bool_attribute": schema.BoolAttribute{
									Computed: true,
								},
							},
						},
					},
				},
			},
		},
		"single_nested_block_bool_attribute": schema.SingleNestedBlock{
			Attributes: map[string]schema.Attribute{
				"bool_attribute": schema.BoolAttribute{
					Computed: true,
				},
			},
		},
		"single_nested_block_object_attribute_single_nested_list_nested_block_list_attribute": schema.SingleNestedBlock{
			Attributes: map[string]schema.Attribute{
				"object_attribute": schema.ObjectAttribute{
					AttributeTypes: map[string]attr.Type{
						"obj_string_attr": types.StringType,
					},
					Computed: true,
				},
			},
			Blocks: map[string]schema.Block{
				"list_nested_block": schema.ListNestedBlock{
					NestedObject: schema.NestedBlockObject{
						Attributes: map[string]schema.Attribute{
							"list_attribute": schema.ListAttribute{
								ElementType: types.StringType,
								Computed:    true,
							},
						},
					},
				},
			},
		},
		"single_nested_single_nested_block_bool_attribute": schema.SingleNestedBlock{
			Blocks: map[string]schema.Block{
				"single_nested_block": schema.SingleNestedBlock{
					Attributes: map[string]schema.Attribute{
						"bool_attribute": schema.BoolAttribute{
							Computed: true,
						},
					},
				},
			},
		},
	},
}

type DatasourceModel struct {
	BoolAttribute                                                            types.Bool   `tfsdk:"bool_attribute"`
	ListListAttribute                                                        types.List   `tfsdk:"list_list_attribute"`
	ListMapAttribute                                                         types.List   `tfsdk:"list_map_attribute"`
	ListNestedOne                                                            types.List   `tfsdk:"list_nested_one"`
	ListNestedThree                                                          types.List   `tfsdk:"list_nested_three"`
	ListNestedTwo                                                            types.List   `tfsdk:"list_nested_two"`
	ListObjectAttribute                                                      types.List   `tfsdk:"list_object_attribute"`
	ListObjectObjectAttribute                                                types.List   `tfsdk:"list_object_object_attribute"`
	ObjectAttribute                                                          types.Object `tfsdk:"object_attribute"`
	ObjectListAttribute                                                      types.Object `tfsdk:"object_list_attribute"`
	ObjectListObjectAttribute                                                types.Object `tfsdk:"object_list_object_attribute"`
	SingleNestedBoolAttribute                                                types.Object `tfsdk:"single_nested_bool_attribute"`
	SingleNestedSingleNestedBoolAttribute                                    types.Object `tfsdk:"single_nested_single_nested_bool_attribute"`
	SingleNestedSingleNestedListAttribute                                    types.Object `tfsdk:"single_nested_single_nested_list_attribute"`
	ListNestedBlockBoolAttribute                                             types.List   `tfsdk:"list_nested_block_bool_attribute"`
	ListNestedBlockObjectAttributeListNestedNestedBlockListAttribute         types.List   `tfsdk:"list_nested_block_object_attribute_list_nested_nested_block_list_attribute"`
	ListNestedListNestedBlockBoolAttribute                                   types.List   `tfsdk:"list_nested_list_nested_block_bool_attribute"`
	SingleNestedBlockBoolAttribute                                           types.Object `tfsdk:"single_nested_block_bool_attribute"`
	SingleNestedBlockObjectAttributeSingleNestedListNestedBlockListAttribute types.Object `tfsdk:"single_nested_block_object_attribute_single_nested_list_nested_block_list_attribute"`
	SingleNestedSingleNestedBlockBoolAttribute                               types.Object `tfsdk:"single_nested_single_nested_block_bool_attribute"`
}

type ListNestedOneModel struct {
	BoolAttribute types.Bool `tfsdk:"bool_attribute"`
}

type ListNestedThreeModel struct {
	ListNestedThreeListNestedOne types.List `tfsdk:"list_nested_three_list_nested_one"`
}

type ListNestedThreeListNestedOneModel struct {
	ListAttribute types.List `tfsdk:"list_attribute"`
}

type ListNestedTwoModel struct {
	ListNestedTwoListNestedOne types.List `tfsdk:"list_nested_two_list_nested_one"`
}

type ListNestedTwoListNestedOneModel struct {
	BoolAttribute types.Bool `tfsdk:"bool_attribute"`
}

type SingleNestedBoolAttributeModel struct {
	BoolAttribute types.Bool `tfsdk:"bool_attribute"`
}

type SingleNestedSingleNestedBoolAttributeModel struct {
	SingleNestedAttribute types.Object `tfsdk:"single_nested_attribute"`
}

type SingleNestedAttributeModel struct {
	BoolAttribute types.Bool `tfsdk:"bool_attribute"`
}

type SingleNestedSingleNestedListAttributeModel struct {
	SingleNestedAttribute types.Object `tfsdk:"single_nested_attribute"`
}

type SingleNestedAttributeModel struct {
	ListAttribute types.List `tfsdk:"list_attribute"`
}

type ListNestedBlockBoolAttributeModel struct {
	BoolAttribute types.Bool `tfsdk:"bool_attribute"`
}

type ListNestedBlockObjectAttributeListNestedNestedBlockListAttributeModel struct {
	ObjectAttribute types.Object `tfsdk:"object_attribute"`
	ListNestedBlock types.List   `tfsdk:"list_nested_block"`
}

type ListNestedBlockModel struct {
	ListAttribute types.List `tfsdk:"list_attribute"`
}

type ListNestedListNestedBlockBoolAttributeModel struct {
	ListNestedBlock types.List `tfsdk:"list_nested_block"`
}

type ListNestedBlockModel struct {
	BoolAttribute types.Bool `tfsdk:"bool_attribute"`
}

type SingleNestedBlockBoolAttributeModel struct {
	BoolAttribute types.Bool `tfsdk:"bool_attribute"`
}

type SingleNestedBlockObjectAttributeSingleNestedListNestedBlockListAttributeModel struct {
	ObjectAttribute types.Object `tfsdk:"object_attribute"`
	ListNestedBlock types.List   `tfsdk:"list_nested_block"`
}

type ListNestedBlockModel struct {
	ListAttribute types.List `tfsdk:"list_attribute"`
}

type SingleNestedSingleNestedBlockBoolAttributeModel struct {
	SingleNestedBlock types.Object `tfsdk:"single_nested_block"`
}

type SingleNestedBlockModel struct {
	BoolAttribute types.Bool `tfsdk:"bool_attribute"`
}

func (m ListNestedThreeModel) objectType() types.ObjectType {
	return types.ObjectType{AttrTypes: m.objectAttributeTypes()}
}

func (m ListNestedThreeModel) objectAttributeTypes() map[string]attr.Type {
	return map[string]attr.Type{
		"list_nested_three_list_nested_one": types.ListType{
			ElemType: ListNestedThreeListNestedOneModel{}.objectType(),
		},
	}
}

func (m ListNestedThreeListNestedOneModel) objectType() types.ObjectType {
	return types.ObjectType{AttrTypes: m.objectAttributeTypes()}
}

func (m ListNestedThreeListNestedOneModel) objectAttributeTypes() map[string]attr.Type {
	return map[string]attr.Type{
		"list_attribute": types.ListType{
			ElemType: types.StringType,
		},
	}
}
func (m ListNestedTwoModel) objectType() types.ObjectType {
	return types.ObjectType{AttrTypes: m.objectAttributeTypes()}
}

func (m ListNestedTwoModel) objectAttributeTypes() map[string]attr.Type {
	return map[string]attr.Type{
		"list_nested_two_list_nested_one": types.ListType{
			ElemType: ListNestedTwoListNestedOneModel{}.objectType(),
		},
	}
}

func (m ListNestedTwoListNestedOneModel) objectType() types.ObjectType {
	return types.ObjectType{AttrTypes: m.objectAttributeTypes()}
}

func (m ListNestedTwoListNestedOneModel) objectAttributeTypes() map[string]attr.Type {
	return map[string]attr.Type{
		"bool_attribute": types.BoolType,
	}
}
